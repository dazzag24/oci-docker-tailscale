#cloud-config
# this variant installs docker as well as tailscale
---
ssh_pwauth: false
apt:
  sources:
    tailscale.list:
      source: deb https://pkgs.tailscale.com/stable/ubuntu focal main
      keyid: 2596A99EAAB33821893C0A79458CA832957F5868
    docker.list:
      source: deb [arch=arm64] https://download.docker.com/linux/ubuntu focal stable
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
package_upgrade: true      
packages: 
  - docker-ce
  - docker-ce-cli
  - docker-compose
  - tailscale
# create the docker group
groups:
    - docker
# Add default auto created user to docker group
system_info:
    default_user:
        groups: [docker]
# assign a VM's default user, which is ubuntu, to the docker group
users:
    - default
    - name: ubuntu
      groups: docker
output : { all : '| tee -a /var/log/cloud-init-output.log' }

write_files:
- path: /home/ubuntu/Caddyfile
  owner: ubuntu:ubuntu
  permissions: '0644'
  content: |
    {$DOMAIN}:443 {
      log {
        level INFO
        output file {$LOG_FILE} {
          roll_size 10MB
          roll_keep 10
        }
      }

      # Use the ACME DNS-01 challenge to get a cert for the configured domain.
      tls {
        dns duckdns {$DUCKDNS_TOKEN}
      }

      # This setting may have compatibility issues with some browsers
      # (e.g., attachment downloading on Firefox). Try disabling this
      # if you encounter issues.
      encode gzip

      # Notifications redirected to the WebSocket server
      reverse_proxy /notifications/hub vaultwarden:3012

      # Proxy everything else to Rocket
      reverse_proxy vaultwarden:80
    }  

- path: /home/ubuntu/docker-compose.yml
  owner: ubuntu:ubuntu
  permissions: '0644'
  content: |
    version: '3'

    services:
      vaultwarden:
        image: vaultwarden/server:latest
        container_name: vaultwarden
        restart: always
        environment:
          - WEBSOCKET_ENABLED=true  # Enable WebSocket notifications.
        volumes:
          - /home/ubuntu/vw-data:/data

      caddy:
        image: caddy:2
        container_name: caddy
        restart: always
        ports:
          - 80:80
          - 443:443
        volumes:
          - /home/ubuntu/caddy:/usr/bin/caddy  # Your custom build of Caddy.
          - /home/ubuntu/Caddyfile:/etc/caddy/Caddyfile:ro
          - /home/ubuntu/caddy-config:/config
          - /home/ubuntu/caddy-data:/data
        environment:
          - DOMAIN=${caddy_domain_name}     # Your domain, prefixed with http or https.
          - EMAIL=${caddy_acme_reg_email}   # The email address to use for ACME registration.
          - DUCKDNS_TOKEN=${caddy_duckdns_token}  # Your Duck DNS token.
          - LOG_FILE=/home/ubuntu/vw-data/access.log

runcmd:
  - touch /home/ubuntu/userdata.`date --iso-8601=seconds`.start
  #- tailscale up -authkey ${tailscale_key}
  - wget -O /usr/local/bin/caddy "https://caddyserver.com/api/download?os=linux&arch=arm64&p=github.com%2Fcaddy-dns%2Fduckdns&idempotency=54695838413980"
  - chmod a+x /usr/local/bin/caddy 
  - mkdir /home/ubuntu/vw-data
  #- docker run -d --name vaultwarden -v /home/ubuntu/vw-data/:/data/ -p 80:80 vaultwarden/server:latest
  - touch /home/ubuntu/userdata.`date --iso-8601=seconds`.end
final_message: "The system setup is complete. Duration: $UPTIME seconds"


